<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>for f in "$@"; do
    # Check if the file exists and is a regular file
    if [[ -f "$f" || -d "$f" ]]; then
        logfile_path="$HOME/snowleopardcompressedfiles.log"

        filename=$(basename -- "$f")
        filepath=$(dirname -- "$f")

        # Echo paths for debugging
        # echo "Filepath: $filepath" &gt;&gt; $logfile_path
        # echo "Filename: $filename" &gt;&gt; $logfile_path

        # Store original modification date
        original_mod_date=$(stat -f "%Sm" -t "%Y%m%d%H%M.%S" "$f")

        # Calculate original size (different methods for files and directories)
        if [[ -f "$f" ]]; then
            original_size=$(stat -f%z "$f")
        elif [[ -d "$f" ]]; then
            original_size=$(du -sk "$f" | cut -f1)  # Size in kilobytes
        fi

        # Prepare the AppleScript command
        authenticatedASaction="do shell script \"ditto --hfsCompression --zlibCompressionLevel=9 \\\"$filepath/$filename\\\" \\\"$filepath/$filename.tmp\\\" &amp;&amp; rm -rf \\\"$filepath/$filename\\\" &amp;&amp; mv \\\"$filepath/$filename.tmp\\\" \\\"$filepath/$filename\\\" &amp;&amp; touch -t \\\"$original_mod_date\\\" \\\"$filepath/$filename\\\"\"" # with administrator privileges"
        # Add administrator privileges if the user doesn't have write access
        needAdmin=false
        # Check permission for the topmost directory (if it's a directory)
        if [[ -d "$f" ]] &amp;&amp; [[ ! -w "$f" ]]; then
            needAdmin=true
        fi
        # Check permissions recursively for directories
        if [[ -d "$f" ]] &amp;&amp; find "$f" -mindepth 1 ! -writable -exec false {} +; then
            needAdmin=true
        fi
        # Check permission for a single file (if it's a file)
        if [[ -f "$f" ]] &amp;&amp; [[ ! -w "$f" ]]; then
            needAdmin=true
        fi
        if $needAdmin; then
			authenticatedASaction="${authenticatedASaction} with administrator privileges"
		fi
# echo "$authenticatedASaction" &gt;&gt; $logfile_path
        # Execute the AppleScript command and capture any errors
        if osascript -e "$authenticatedASaction" 2&gt;/tmp/compression_error.log; then
            # Calculate compressed size (different methods for files and directories)
            if [[ -f "$f" ]]; then
                compressed_size=$(stat -f%z "$f")
            elif [[ -d "$f" ]]; then
                compressed_size=$(du -sk "$f" | cut -f1)  # Size in kilobytes
            fi
            # Calculate savings and percentage saved
            savings=$((original_size - compressed_size))
            if [ $original_size -ne 0 ]; then
                percent_saved=$(echo "scale=2; ($savings / $original_size) * 100" | bc)
            else
                percent_saved=0
            fi
            # Log successful compression with timestamp and percent saved
            echo -e "$(date '+%Y%m%d%H%M%S')\t${f}\t${percent_saved}%" &gt;&gt; $logfile_path
        else
            # Log any errors that occurred
            echo -e "$(date '+%Y%m%d%H%M%S')\tERROR compressing $f, $(cat /tmp/compression_error.log)" &gt;&gt; $logfile_path
        fi
    else
        echo "$(date '+%Y%m%d%H%M%S') - $f is not a file or directory or does not exist" &gt;&gt; $logfile_path
    fi
done
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>371B50D4-7F40-4263-A39D-92D846B8500C</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>D7DBA6E7-EF9A-4B4E-9466-9F438F83ABF8</string>
				<key>UUID</key>
				<string>2792A691-37C3-4B6B-8380-4D44EF9514A3</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>376.000000:652.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>state</key>
	<dict>
		<key>AMLogTabViewSelectedIndex</key>
		<integer>0</integer>
		<key>libraryState</key>
		<dict>
			<key>actionsMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 537.000000, 593.000000, NO</string>
					<string>0.000000, 594.000000, 537.000000, 239.000000, NO</string>
				</array>
			</dict>
			<key>actionsMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 593.000000, NO</string>
					<string>164.000000, 0.000000, 373.000000, 593.000000, NO</string>
				</array>
			</dict>
			<key>variablesMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 537.000000, 555.000000, NO</string>
					<string>0.000000, 556.000000, 537.000000, 201.000000, NO</string>
				</array>
			</dict>
			<key>variablesMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 555.000000, NO</string>
					<string>164.000000, 0.000000, 373.000000, 555.000000, NO</string>
				</array>
			</dict>
		</dict>
		<key>majorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>263</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 537.000000, 878.000000, NO</string>
				<string>538.000000, 0.000000, 1153.000000, 878.000000, NO</string>
			</array>
		</dict>
		<key>minorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>0.0</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 1153.000000, 687.000000, NO</string>
				<string>0.000000, 697.000000, 1153.000000, 162.000000, NO</string>
			</array>
		</dict>
		<key>windowFrame</key>
		<string>{{83, 190}, {1690, 955}}</string>
		<key>workflowViewScrollPosition</key>
		<string>{{0, 0}, {1153, 687}}</string>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
