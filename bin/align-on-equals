#!/usr/bin/env bash

# this script aligns output on the = signs
# which is presumably ini-like configuration or env data

# Check for help or test flags
case "$1" in
	-h|--help)
		echo "align-on-equals - Align text on equal signs"
		echo "Usage: align-on-equals [file]"
		echo "       command | align-on-equals"
		echo ""
		echo "Examples:"
		echo "  env | align-on-equals"
		echo "  echo -e 'name=value\\nbiggername=biggervalue' | align-on-equals"
		echo "  # Output:"
		echo "  # name       = value"
		echo "  # biggername = biggervalue"
		echo ""
		echo "Options:"
		echo "  -h, --help    Show this help message"
		echo "  --test        Run tests"
		exit 0
		;;
	--test)
		# Run tests from the test file
		exec "$HOME/dotfiles/bin/test/$(basename "${0##\-}")_test"
		;;
esac

# Execute the AWK script
awk '
BEGIN {
	FS = "=" # set the field separator to "="
	max_length = 0 # initialize the maximum key length to zero
	kl = 0 # initialize the key length to zero
	num_valid = 0 # initialize the number of valid lines to zero
}

{
	kl = length($1)
	# Skip lines where the key length is zero
	if (kl == 0) {
		next
	}
	num_valid++ # increment the number of valid lines
	keys[NR] = $1 # store the key in an array
	values[NR] = $2 # store the value in an array
	if (kl > max_length) {
		max_length = kl # update the maximum key length if necessary
	}
}

END {
	for (i = 1; i <= num_valid; i++) {
		printf("%-" max_length "s = %s\n", keys[i], values[i]) # use printf to format the output
	}
}' "$@"
