#!/usr/bin/env bash

ocr() {
	# Check for dependencies
	if ! command -v magick &> /dev/null; then
		echo "Error: ImageMagick (magick) is not installed." >&2
		return 1
	fi

	if ! command -v tesseract &> /dev/null; then
		echo "Error: Tesseract is not installed." >&2
		return 1
	fi

	# Check arguments
	if [ $# -lt 1 ] || [ $# -gt 2 ]; then
		echo "Usage: ocr <input_image|- for stdin> [<output_file|. for same-dir|stdout if omitted>]" >&2
		return 1
	fi

	local input="$1"
	local basename_input="$(basename "$input")"
	local output="${2:-stdout}"
	if [ "$output" = "-" ]; then
		output="stdout"
	fi
	local temp_image

	# Handle input from stdin or file
	if [ "$input" = "-" ]; then
		if [ "$output" = "." ]; then
			echo "Error: Cannot use input from stdin with output '.' (requires filename)." >&2
			return 1
		fi
		temp_image="$(mktemp --suffix=.png)"
		magick - -strip -threshold 30% "$temp_image"
	else
		# temp_image="${input%.*}_bw.png"
		temp_image="$(mktemp --suffix=.png -t ${basename_input%.*}_bw.XXXXXX))"
		magick "$input" -strip -threshold 30% "$temp_image"
	fi

	# Handle output
	if [ "$output" = "." ]; then
		output="${input%.*}.txt"
	fi

	if [ "$output" = "stdout" ]; then
		tesseract "$temp_image" stdout
	else
		tesseract "$temp_image" "${output%.*}"
		echo "OCR complete. High-contrast image saved to ${temp_image} and output saved to $output" >&2
	fi

	# Cleanup temporary files
	# rm "$temp_image"
}

# Export the function so it can be used by find -exec

# Run the function, passing along any args, if this file was run directly (such as via sudo) instead of as an include
# Sometimes, $0 contains a leading dash to indicate an interactive (or is it login?) shell,
# which is apparently an old convention (which also broke the basename call on OS X)
_me=$(basename "${0##\-}")
if [ "$_me" = "ocr" ]; then
	$_me "$@"
fi
unset _me
# Run the function if this script is executed directly
if ! (return 0 2>/dev/null); then
	# Check if we are running tests
	if [ "$1" = "--test" ]; then
		# Run tests from the test file
		. "$HOME/dotfiles/bin/test/$(basename "${0##\-}")_test"
	else
		# If called directly, pass all arguments to the function
		$(basename "${0##\-}") "$@"
	fi
fi
