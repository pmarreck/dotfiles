#!/usr/bin/env bash

# graceful dependency enforcement
# Usage: needs <executable> [provided by <packagename>]
# only redefines it here if it's not already defined
>/dev/null declare -F needs || \
needs() {
  [ -n "${EDIT}" ] && unset EDIT && edit_function "${FUNCNAME[0]}" "$BASH_SOURCE" && return
  local bin=$1
  shift
  command -v "$bin" >/dev/null 2>&1 || { echo >&2 "I require $bin but it's not installed or in PATH; $*"; return 1; }
}

jpegxl() {
  # JXL_DEBUG=true
  needs cjxl provided by jpeg-xl

  JPEGXL_DEFAULT_EFFORT=${JPEGXL_DEFAULT_EFFORT:-10}
  [ -n "$JXL_DEBUG" ] && echo "Default effort JPEGXL_DEFAULT_EFFORT set to: $JPEGXL_DEFAULT_EFFORT"
  JPEGXL_DEFAULT_DISTANCE=${JPEGXL_DEFAULT_DISTANCE:-1}
  [ -n "$JXL_DEBUG" ] && echo "Default distance JPEGXL_DEFAULT_DISTANCE set to: $JPEGXL_DEFAULT_DISTANCE"

  for filepath in "$@"; do
    if [[ -f "$filepath" ]]; then
      extension="${filepath##*.}"
      extension="${extension,,}"  # Convert to lowercase
      [ -n "$JXL_DEBUG" ] && echo "File extension: $extension"
      output="${filepath%.*}.jxl"
      [ -n "$JXL_DEBUG" ] && echo "Output file: $output"
      if [[ "$extension" == "png" || "$extension" == "gif" ]]; then
        [ -n "$JXL_DEBUG" ] && echo "Extension is png or gif. Converting $filepath to $output"
        cjxl -e $JPEGXL_DEFAULT_EFFORT -d $JPEGXL_DEFAULT_DISTANCE "$filepath" "$output"
      elif [[ "$extension" == "jpg" || "$extension" == "jpeg" ]]; then
        [ -n "$JXL_DEBUG" ] && echo "Extension is jpg or jpeg. Converting $filepath to $output"
        # let jpegs recompress losslessly; this is the default, but if you remove this param, it complains
        cjxl -e $JPEGXL_DEFAULT_EFFORT --lossless_jpeg=1 "$filepath" "$output"
      elif [[ "$extension" == "webp" ]]; then
        [ -n "$JXL_DEBUG" ] && echo "Extension is webp. Converting $filepath to $output"
        needs cwebp provided by libwebp
        temp_png=$(mktemp --suffix=.png)
        cwebp -o "$temp_png" "$filepath"
        # since webp is already lossy-compressed, we can use a little lower distance
        cjxl -e $JPEGXL_DEFAULT_EFFORT -d $(( JPEGXL_DEFAULT_DISTANCE + 1 )) "$temp_png" "$output"
        rm "$temp_png"
      elif [[ "$extension" == "heic" ]]; then
        [ -n "$JXL_DEBUG" ] && echo "Extension is heic. Converting $filepath to $output"
        needs heif-dec provided by libheif
        temp_png=$(mktemp --suffix=.png)
        [ -n "$JXL_DEBUG" ] && echo "temp_png: $temp_png"
        # note that rotation when converting heic to png is often not respected; out of scope for this script
        heif-dec "$filepath" "$temp_png"
        # since heic is already lossy-compressed, we can use a little lower distance
        cjxl -e $JPEGXL_DEFAULT_EFFORT -d $(( JPEGXL_DEFAULT_DISTANCE + 1 )) "$temp_png" "$output"
        [ -n "$JXL_DEBUG" ] || rm "$temp_png"
      else
        echo "Unsupported file type: $filepath"
      fi
    else
      echo "File not found: $filepath"
    fi
  done
}

# Export the function so it can be used by find -exec
export -f jpegxl

# Run the function, passing along any args, if this file was run directly (such as via sudo) instead of as an include
# Sometimes, $0 contains a leading dash to indicate an interactive (or is it login?) shell,
# which is apparently an old convention (which also broke the basename call on OS X)
_me=$(basename "${0##\-}")
if [ "$_me" = "jpegxl" ]; then
	$_me "$@"
fi
unset _me
