#!/usr/bin/env bash

div() {
	[ -n "${EDIT}" ] && unset EDIT && edit_function "${FUNCNAME[0]}" "$BASH_SOURCE" && return
	local sd=${3:-2}
	case $1 in
	-h | --help | "")
		echo "Divide two numbers as decimal, not integer"
		echo "Usage: div <numerator> <denominator> [<digits after decimal point, defaults to 2>]"
		echo "This function is defined in $BASH_SOURCE"
		echo "Note that the result is truncated to $sd significant digits after the decimal point,"
		echo "NOT rounded from the next decimal place."
		echo "Also, things get weird with big arguments; compare 'div 1234234 121233333 5' with 'div 1234234 121233333 50'."
		echo "Not sure why, yet; possibly internal bash integer overflow."
		;;
	*)
		printf "%.${sd}f\n" "$((10**${sd} * ${1}/${2}))e-${sd}"
		;;
	esac
}

# Run the function if this script is executed directly
if ! (return 0 2>/dev/null); then
	# Check if we are running tests
	if [ "$1" = "--test" ]; then
		# Run tests from the test file
		. "$HOME/dotfiles/bin/test/$(basename "${0##\-}")_test"
	else
		# If called directly, pass all arguments to the function
		$(basename "${0##\-}") "$@"
	fi
fi
