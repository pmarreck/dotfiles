#!/usr/bin/env bash

_generate_curl_api_request_for_please() {
	[ -n "${EDIT}" ] && unset EDIT && edit_function "${FUNCNAME[0]}" "$BASH_SOURCE" && return
	needs jq
	local request args timeout model curl
	curl=${CURL:-curl}
	model=${OPENAI_MODEL:-gpt-5-mini}
	timeout=${OPENAI_TIMEOUT:-30}
	args="$@"
	args=$(printf "%b" "$args" | $SED "s/'/'\\\\''/g") # This is just a narsty sed to escape single quotes.
	# (Piping to "jq -sRr '@json'" was not working correctly, so I had to take control of the escaping myself.)
# printf "escaped args: %b\n" "$args" >&2
	read -r -d '' request <<EOF
	$curl https://api.openai.com/v1/chat/completions \
	-H "Authorization: Bearer $OPENAI_API_KEY" \
	-H "Content-Type: application/json" \
	--silent \
	--max-time $timeout \
	-d '{"model": "$model", "messages": [{"role": "user", "content": "$args"}], "temperature": 1}'
EOF
	printf "%b" "$request"
}

# Run the function if this script is executed directly
if ! (return 0 2>/dev/null); then
	# Check if we are running tests
	if [ "$1" = "--test" ]; then
		# Run tests from the test file
		. "$HOME/dotfiles/bin/test/$(basename "${0##\-}")_test"
	else
		# If called directly, pass all arguments to the function
		$(basename "${0##\-}") "$@"
	fi
fi
