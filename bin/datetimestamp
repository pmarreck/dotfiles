#!/usr/bin/env bash

. "$HOME/dotfiles/bin/src/truthy.sh"

datetimestamp() {
	[ -n "${EDIT}" ] && unset EDIT && edit_function "${FUNCNAME[0]}" "$BASH_SOURCE" && return
	# set the date bin to gdate (or one that recognizes --resolution) if available unless TIME_SOURCE overrides
	local datebin="date"
	local time_source
	if [ -n "$TIME_SOURCE" ]; then
		time_source="$TIME_SOURCE"
	else
		$datebin --resolution >/dev/null 2>&1 || datebin="gdate"
		$datebin --resolution >/dev/null 2>&1 || datebin="date"
		time_source="$datebin"
	fi
	local format=${DATETIMESTAMPFORMAT:-'+%Y%m%d%H%M%S.%3N'}
	# if there is a --date argument
	case "$1" in
		--date=*|-d=*)
			"$time_source" --date="${1#*=}" "$format"
			;;
		--date|-d)
			"$time_source" --date="$2" "$format"
			;;
		--help|-h)
			echo "Usage: datetimestamp [--date|-d[=| ]'date']"
			echo "  --date|-d [date]  date to use, defaults to now, see man date for format details"
			echo "  --help|-h         show this help"
			return 0
			;;
		-*)
			echo "Unknown option: $1" >&2
			datetimestamp -h
			return 2
			;;
		*)
			"$time_source" "$format"
			;;
	esac
}

# Export the function so it can be used by find -exec

# Run the function if this script is executed directly
if ! (return 0 2>/dev/null); then
	# Check if we are running tests
	if [ "$1" = "--test" ]; then
		# Run tests from the test file
		. "$HOME/dotfiles/bin/test/$(basename "${0##\-}")_test"
	else
		# If called directly, pass all arguments to the function
		$(basename "${0##\-}") "$@"
	fi
fi
