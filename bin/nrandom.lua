-- This Lua file was automatically generated from nrandom
-- Do not edit this file directly; modify the source file instead

local nrandom
nrandom = function(start, end_val)
	if start == nil then
		start = 0
	end
	if end_val == nil then
		end_val = 99
	end
	local range = end_val - start
	local result
	repeat
		local u1, u2 = math.random(), math.random()
		local z0 = math.sqrt(-2 * math.log(u1)) * math.cos(2 * math.pi * u2)
		local random_number = start + (z0 * (range / 6)) + (range / 2)
		result = math.floor(random_number + 0.5)
	until result >= start and result <= end_val
	return result
end
local show_help
show_help = function()
	print("Usage: nrandom <start> <end>")
	print("Outputs a normally-distributed random number between <start> and <end>")
	print("If <start> is not specified, it defaults to 0")
	return print("If <end> is not specified, it defaults to 99")
end
local run_test
run_test = function()
	local test_file = tostring(os.getenv('HOME')) .. "/dotfiles/bin/test/nrandom_test"
	local result = os.execute(tostring(test_file) .. " >/dev/null")
	return os.exit(result == 0 and 0 or 1)
end
local main
main = function()
	math.randomseed(os.time() + os.clock() * 1000000)
	local _exp_0 = #arg
	if 0 == _exp_0 then
		io.stderr:write("(with a start of 0 and an end of 99)\n")
		return print(nrandom())
	else
		local _exp_1 = arg[1]
		if "--help" == _exp_1 or "-h" == _exp_1 then
			return show_help()
		elseif "--test" == _exp_1 then
			return run_test()
		else
			local start = tonumber(arg[1])
			local end_val = tonumber(arg[2])
			if not start then
				io.stderr:write("Error: start value must be a number\n")
				os.exit(1)
			end
			if arg[2] and not end_val then
				io.stderr:write("Error: end value must be a number\n")
				os.exit(1)
			end
			return print(nrandom(start, end_val))
		end
	end
end
return main()
