[[ $- == *i* ]] && echo "Configuring PATH via .pathconfig"
# echo "Current PATH is $PATH"

# All path configs here should replace any existing version of themselves in the PATH before appending
# (idempotent)

# Add Python installed scripts to front of PATH
# export PATH=/usr/local/share/python:${PATH/\/usr\/local\/share\/python:/}
# Move /usr/local/bin and /usr/local/sbin to the front of PATH by subbing it out and prepending
export PATH=/usr/local/sbin:${PATH/\/usr\/local\/sbin:/}
export PATH=/usr/local/bin:${PATH/\/usr\/local\/bin:/}
## # Move /usr/local/Homebrew/bin and /usr/local/Homebrew/sbin to the front of PATH by subbing it out and prepending
## export PATH=/usr/local/Homebrew/sbin:${PATH/\/usr\/local\/Homebrew\/sbin:/}
## export PATH=/usr/local/Homebrew/bin:${PATH/\/usr\/local\/Homebrew\/bin:/}

# add my user bin to PATH
# export PATH=$PATH:~/bin
export PATH=${PATH/~\/bin:/}:~/bin

# add my Scripts bin to PATH
# export PATH=$PATH:~/Scripts
export PATH=${PATH/~\/Scripts:/}:~/Scripts

# Add RVM to PATH for scripting
export PATH=~/.rvm/bin:${PATH/~\/.rvm\/bin:/}

# add bundler binstubs
export PATH=~/.bundler_binstubs:${PATH/~\/.bundler_binstubs:/}

# BINSTUBS
# add binstub to front of PATH
export PATH=./bin:${PATH/\.\/bin:/}

# just for linuxbrew, see: https://github.com/Homebrew/linuxbrew
# if [ "$(uname -s)" == "Linux" ]; then
#   export PATH="$HOME/.linuxbrew/bin:$PATH"
#   export LD_LIBRARY_PATH="$HOME/.linuxbrew/lib:$LD_LIBRARY_PATH"
# fi

# add postgres app install dir to front of PATH
export PATH=/Applications/Postgres.app/Contents/Versions/9.6/bin:${PATH/\/Applications\/Postgres\.app\/Contents\/Versions\/9\.6\/bin:/}

# prefer homebrew-installed sqlite to native one
export PATH="/usr/local/opt/sqlite/bin:$PATH"

# get building of gem capybara-webkit to use qt@5.5's qmake
export PATH="$(brew --prefix qt@5.5)/bin:$PATH"

# echo "PATH after config is $PATH"
